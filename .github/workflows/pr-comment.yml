name: Run on Comment
on:
  issue_comment:
    types: 
      - created
permissions:
  contents: read
  issues: read
  pull-requests: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'magic string')
    steps:
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event_path }}
          path: ${{ github.event_path }}


 



# - env:
#       GH_TOKEN: ${{ github.token }}
#   run: |
  # current_branch="$(git branch --show-current)"
# run_id="$(
#   gh run list \
#     --branch "${current_branch}" \
#     --workflow pip-licenses.yml \
#     --status success \
#     --json databaseId \
#     --jq '.[0].databaseId'
# )"
# echo -e "run_id: ${run_id}\ncurrent_branch: ${current_branch}"
# echo "ACTION_REF: ${ACTION_REF}"
# gh run download $run_id --name "${run_id}-BUILD_DEPENDENCY_LICENSES.md"
# cat "${run_id}-BUILD_DEPENDENCY_LICENSES.md"

# - uses: xt0rted/pull-request-comment-branch@v2
#   id: get-comment-branch
# - uses: actions/checkout@v3
#   with:
#     ref: ${{ steps.get.comment-branch.outputs.head_ref }}

# - uses: actions/github-script@v6
#   with:
#     result-encoding: string
#     script: |
#       console.log(JSON.stringify( context.payload.issue.pull_request.url ))
#       const response = await github.rest.issues.pulls({
#         issue_number: context.issue.number,
#         owner: context.payload.repository.owner.login,
#         repo: context.payload.repository.name,
#       })
# Working example from other workflow
# const { status, data } = await github.rest.pulls.listLanguages({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   pull_number: 'PULL_NUMBER',
# })

# https://docs.github.com/en/free-pro-team@latest/rest/pulls/pulls?apiVersion=2022-11-28#get-a-pull-request
# await octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}', {
#   owner: 'OWNER',
#   repo: 'REPO',
#   pull_number: 'PULL_NUMBER',
#   headers: {
#     'X-GitHub-Api-Version': '2022-11-28'
#   }
# })

# <comment_event.json | jq '.payload.issue.pull_request.url' -r
# https://api.github.com/repos/gregalia/gha-learn/pulls/20

# gh api /repos/gregalia/gha-learn/pulls/20 --jq '.head.ref'
# pr-comment-build

