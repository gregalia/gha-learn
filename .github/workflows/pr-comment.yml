name: Run on Comment
on:
  issue_comment:
    types: 
      - created
      - edited
permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write
env:
  GH_TOKEN: ${{ github.token }}
  WORKFLOW_TO_DOWNLOAD_ARTIFACT_FROM: pip-licenses.yml
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == '/run'
    steps:
      - name: Export PR Info
        run: |
          pr_url="$(jq --raw-output '.issue.pull_request.url' "${GITHUB_EVENT_PATH}")"
          pr_data="$(gh api "${pr_url}" --header "X-GitHub-Api-Version: 2022-11-28")"
          echo "PR_HEAD_REF=$(jq --raw-output '.head.ref' <<<"${pr_data}")" \
          PR_HEAD_SHA=$(jq --raw-output '.head.sha' <<<"${pr_data}")
          PR_NUMBER=$(jq --raw-output '.number' <<<"${pr_data}")
          REPO_FULL_NAME=$(jq --raw-output '.head.repo.full_name' <<<"${pr_data}")" \
            >>"${GITHUB_ENV}"
      - name: Set Initial Commit Status
        if: always()
        run: |
          gh api "/repos/${{ env.REPO_FULL_NAME }}/statuses/${{ env.PR_HEAD_SHA }}" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --raw-field "state=pending" \
            --raw-field "context=Download Pip Licenses" \
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.PR_HEAD_SHA }}
      - name: Download Run ID Artifact
        run: |
          run_id="$(
            gh run list \
              --branch "${{ env.PR_HEAD_REF }}" \
              --workflow "${{ env.WORKFLOW_TO_DOWNLOAD_ARTIFACT_FROM }}" \
              --status success \
              --json databaseId \
              --jq '.[0].databaseId'
          )"
          gh run download "${run_id}" \
            --name "${run_id}-BUILD_DEPENDENCY_LICENSES.md" \
            --dir gh_download
      # Note that the filename is the original filename, not the artifact name
      - name: Do Something With the Artifact
        run: |
          cat gh_download/BUILD_DEPENDENCY_LICENSES.md
      - name: Comment the PR
        run: |
          gh pr comment "${{ env.PR_NUMBER }}" \
            --body "Hi from GitHub CLI"
      - name: Set Final Commit Status
        if: always()
        run: |
          gh api "/repos/${{ env.REPO_FULL_NAME }}/statuses/${{ env.PR_HEAD_SHA }}" \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --raw-field "state=${{ job.status }}" \
            --raw-field "context=Download Pip Licenses"
