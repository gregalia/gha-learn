name: Booleaning Called
run-name: Booleaning Called
on:
  workflow_call:
    inputs:
      STRING_INPUT:
        required: true
        type: string
      BOOLEAN_INPUT:
        required: true
        type: boolean
      MULTILINE_INPUT:
        type: string
      MULTISPACE_INPUT:
        type: string
jobs:
  try:
    runs-on: ubuntu-latest
    env:
      STRING_INPUT: ${{inputs.STRING_INPUT}}
      BOOLEAN_INPUT: ${{inputs.BOOLEAN_INPUT}}
      MULTILINE_INPUT: ${{inputs.MULTILINE_INPUT}}
      MULTISPACE_INPUT: ${{inputs.MULTISPACE_INPUT}}
    steps:
      - name: Env
        run: |-
          env | sort
      - name: Inputs
        run: |-
          echo "::group::inputs
          $(jq --color-output <<<'${{toJSON(inputs)}}')
          ::endgroup::"
          echo "::group::github.event.inputs
          $(jq --color-output <<<'${{toJSON(github.event.inputs)}}')
          ::endgroup::"
      - name: Echo
        run: |-
          echo "STRING_INPUT: '${STRING_INPUT}'"
          echo "BOOLEAN_INPUT: '${BOOLEAN_INPUT}'"
          echo "MULTILINE_INPUT: '${MULTILINE_INPUT}'"
          echo "MULTISPACE_INPUT: '${MULTISPACE_INPUT}'"
      - name: Decide Boolean
        if: inputs.BOOLEAN_INPUT
        run: |-
          echo "BOOLEAN_INPUT is true"
      - name: Decide String Implicit
        if: inputs.STRING_INPUT
        run: |-
          echo "STRING_INPUT is true by itself"
      - name: Decide String Explicit
        if: inputs.STRING_INPUT != ''
        run: |-
          echo "STRING_INPUT is true by comparing to an empty string"
      - name: Decide String To JSON
        if: toJSON(inputs.STRING_INPUT)
        run: |-
          echo "STRING_INPUT is true by coercing via toJSON"
      - name: Decide Boolean AND String
        if: inputs.BOOLEAN_INPUT && inputs.STRING_INPUT
        run: |-
          echo "inputs.BOOLEAN_INPUT && inputs.STRING_INPUT"
      - name: Decide Boolean OR String
        if: inputs.BOOLEAN_INPUT || inputs.STRING_INPUT
        run: |-
          echo "inputs.BOOLEAN_INPUT || inputs.STRING_INPUT"
      - name: Decide Boolean NOR String
        if: inputs.BOOLEAN_INPUT || !inputs.STRING_INPUT
        run: |-
          echo "inputs.BOOLEAN_INPUT || !inputs.STRING_INPUT"
      - name: Decide Boolean NAND String
        if: inputs.BOOLEAN_INPUT && !inputs.STRING_INPUT
        run: |-
          echo "inputs.BOOLEAN_INPUT && !inputs.STRING_INPUT"
      - name: Decide NOT Boolean NAND String
        if: ${{!inputs.BOOLEAN_INPUT && !inputs.STRING_INPUT}}
        run: |-
          echo "!inputs.BOOLEAN_INPUT && !inputs.STRING_INPUT"
      - name: Show Warning
        run: |-
          warning_title='WARNING'
          warning_msg='Do better next time'
          echo "::warning title=${warning_title} input::${warning_msg}"
      - name: Show Error
        run: |-
          error_title='ERROR'
          error_msg='No more chances'
          echo "::error title=${error_title} input::${error_msg}"
          # exit 1
      - name: Handle Multiline Input
        run: |-
          IFS=$'\n' read -rd '' -a multiline_input \
            <<<"${MULTILINE_INPUT}" || true
          for input in "${multiline_input[@]}"; do
            echo "input: '${input}'"
          done
      - name: Handle Multispace Input
        run: |-
          IFS=' ' read -rd '' -a multispace_input \
            <<<"${MULTISPACE_INPUT}" || true
          for input in "${multispace_input[@]}"; do
            echo "input: '${input}'"
          done
      - name: YQ
        env:
          INPUTS: ${{toJSON(inputs)}}
        run: |-
          cat <<HEREDOC >>"${GITHUB_STEP_SUMMARY}"
          ### Inputs
          \`\`\`yaml
          $(yq --prettyPrint <<<"${INPUTS}")
          \`\`\`
          HEREDOC
      - name: Output Something
        id: output-something
        run: |-
          cat <<HEREDOC >>"${GITHUB_OUTPUT}"
          FOO_BAR=baz
          HEREDOC
    outputs:
      FOO_BAR: ${{steps.output-something.outputs.FOO_BAR}}
  output:
    needs: try
    runs-on: ubuntu-latest
    steps:
      - name: Summarize Output
        env:
          OUTPUT: ${{toJSON(needs.try.outputs)}}
        run: |-
          cat <<HEREDOC >>"${GITHUB_STEP_SUMMARY}"
          ### Output
          \`\`\`yaml
          $(yq --prettyPrint <<<"${OUTPUT}")
          \`\`\`
          HEREDOC
