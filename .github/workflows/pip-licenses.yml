name: Get pip Licenses
run-name: ${{ github.actor }} is getting pip licenses

env:
  BRANCH_CREATED_HERE: license-file
on:
  pull_request:
    branches-ignore:
      - 'license-file'

jobs:
  Output-Python-Licenses:
    # Permission needed for committing license file
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Print The Environment
        run: printenv

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Generate License File Name
        run: |
          LICENSE_FILE=$(basename ${GITHUB_REPOSITORY})-pip-licenses.md
          echo "LICENSE_FILE=${LICENSE_FILE}" >>${GITHUB_ENV}

      # - name: Run License File Script
      #   run: ./pip-licenses.sh "${LICENSE_FILE}"
      #   env:
      #     LICENSE_FILE: ${{ env.LICENSE_FILE }}

      - name: Dummy License File
        run: echo "Dummy content" >${LICENSE_FILE}
        env:
          LICENSE_FILE: ${{ env.LICENSE_FILE }}

      - name: Pull Repository
        run: |
          git pull --rebase origin ${BRANCH_CREATED_HERE}

      - name: Commit License File
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Test 3P action
          branch: ${{ env.BRANCH_CREATED_HERE }}
          create_branch: true
          file_pattern: ${{ env.BRANCH_CREATED_HERE }}
#       - name: Update Pull Request With File
#         run: |
#           git config --global user.email no-reply@github.com
#           git config --global user.name "GitHub Actions"
#
#           git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}/
#           git pull --rebase origin ${BRANCH_CREATED_HERE}
#           temp_filename=${LICENSE_FILE}-${RANDOM}
#           mv ${LICENSE_FILE} ${temp_filename}
#           git checkout -b ${BRANCH_CREATED_HERE}
#           mv ${temp_filename} ${LICENSE_FILE}
#
#           git add ${LICENSE_FILE}
#           git commit -m "Update license file"
#           git push origin ${BRANCH_CREATED_HERE}
#
#         env:
#           LICENSE_FILE: ${{ env.LICENSE_FILE }}
