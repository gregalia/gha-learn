name: Get pip Licenses
# run-name: ${{ github.actor }} is getting pip licenses

env:
  PYTHON_DEPENDENCIES: requirements.txt

on: pull_request

jobs:
  generate_python_licenses_file:
    # Permission needed for committing license file
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo '$GITHUB_CONTEXT'
      - name: Get PR Files
        uses: actions/github-script@v6
        with:
          retries: 3
          script: |
            let options = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.number
            }
            console.log(options)
            let response = await github.rest.pulls.listFiles(options);
            console.log(response)

#       - name: Checkout Repository
#         uses: actions/checkout@v3
#         with:
#           ref: ${{ github.head_ref }}
#           fetch-depth: 100
#
#       - name: Pull and Checkout This branch
#         run: |
#           git pull --verbose
#           git checkout --progress ${GITHUB_HEAD_REF}
# - name: Check Dependencies Diff
#   run: |
#     BUILD_DEPENDENCIES_MODIFIED=false
#     git diff --quiet --diff-filter=AM HEAD^ HEAD -- ${PYTHON_DEPENDENCIES} || BUILD_DEPENDENCIES_MODIFIED=true
#     echo "BUILD_DEPENDENCIES_MODIFIED=$BUILD_DEPENDENCIES_MODIFIED" >>${GITHUB_ENV}
# - run: echo ${{ env.BUILD_DEPENDENCIES_MODIFIED }}

# - name: Generate License File Name
#   if: env.BUILD_DEPENDENCIES_MODIFIED
#   run: |
#     LICENSE_FILE=$(basename ${GITHUB_REPOSITORY})-pip-licenses.md
#     echo "LICENSE_FILE=${LICENSE_FILE}" >>${GITHUB_ENV}
# - name: Run License File Script
#   if: env.BUILD_DEPENDENCIES_MODIFIED
#   run: .github/pip-licenses.sh "${LICENSE_FILE}"
# - name: Push License File to Pull Request Branch
#   if: ${{ env.BUILD_DEPENDENCIES_MODIFIED }}
#   run: |
#     git config --global user.email github-actions[bot]@users.noreply.github.com
#     git config --global user.name "GitHub Actions"
#     git add --verbose ${LICENSE_FILE}
#     git commit --verbose --message="Update license file"
#     git push --verbose --force origin ${GITHUB_HEAD_REF}
